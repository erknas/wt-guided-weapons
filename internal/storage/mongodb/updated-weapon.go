package mongodb

import (
	"github.com/erknas/wt-guided-weapons/internal/types"
	"go.mongodb.org/mongo-driver/v2/bson"
)

func updateWeapon(weapon *types.Weapon) bson.M {
	return bson.M{
		"$set": bson.M{
			"category":                       weapon.Category,
			"name":                           weapon.Name,
			"mass":                           weapon.Mass,
			"mass_at_end_of_booster_burn":    weapon.MassAtEndOfBoosterBurn,
			"mass_at_end_of_sustainer_burn":  weapon.MassAtEndOfSustainerBurn,
			"caliber":                        weapon.Caliber,
			"length":                         weapon.Length,
			"force_exerted_by_booster":       weapon.ForceExertedByBooster,
			"burn_time_of_booster":           weapon.BurnTimeOfBooster,
			"raw_acceleration_at_ignition":   weapon.RawAccelerationAtIgnition,
			"specific_impulse_of_booster":    weapon.SpecificImpulseOfBooster,
			"delta_v_of_booster":             weapon.DeltaVOfBooster,
			"booster_start_delay":            weapon.BoosterStartDelay,
			"force_exerted_by_sustainer":     weapon.ForceExertedBySustainer,
			"burn_time_of_sustainer":         weapon.BurnTimeOfSustainer,
			"specific_impulse_of_sustainer":  weapon.SpecificImpulseOfSustainer,
			"delta_v_of_sustainer":           weapon.DeltaVOfSustainer,
			"total_delta_v":                  weapon.TotalDeltaV,
			"explosive_mass":                 weapon.ExplosiveMass,
			"warhead":                        weapon.Warhead,
			"penetration":                    weapon.Penetration,
			"proximity_fuse":                 weapon.ProximityFuse,
			"proximity_fuse_arming_distance": weapon.ProximityFuseArmingDistance,
			"proximity_fuse_arming_distance_from_target":     weapon.ProximityFuseArmingDistanceFromTarget,
			"proximity_fuse_range":                           weapon.ProximityFuseRange,
			"proximity_fuse_shell_detection":                 weapon.ProximityFuseShellDetection,
			"proximity_fuse_minimum_altitude":                weapon.ProximityFuseMinimumAltitude,
			"proximity_fuse_delay":                           weapon.ProximityFuseDelay,
			"impact_fuse_sensitivity":                        weapon.ImpactFuseSensitivity,
			"impact_fuse_delay":                              weapon.ImpactFuseDelay,
			"default_zoom":                                   weapon.DefaultZoom,
			"guidance_type":                                  weapon.GuidanceType,
			"guidance_start_delay":                           weapon.GuidanceStartDelay,
			"guidance_duration":                              weapon.GuidanceDuration,
			"guidance_range":                                 weapon.GuidanceRange,
			"guidance_fov":                                   weapon.GuidanceFOV,
			"guidance_max_lead":                              weapon.GuidanceMaxLead,
			"launch_sector":                                  weapon.LaunchSector,
			"guidance_launch_sector":                         weapon.GuidanceLaunchSector,
			"aim_tracking_sensitivity":                       weapon.AimTrackingSensitivity,
			"seeker_warm_up_time":                            weapon.SeekerWarmUpTime,
			"seeker_search_duration":                         weapon.SeekerSearchDuration,
			"seeker_range":                                   weapon.SeekerRange,
			"field_of_view":                                  weapon.FieldOfView,
			"gimbal_limit":                                   weapon.GimbalLimit,
			"track_rate":                                     weapon.TrackRate,
			"uncaged_seeker_before_launch":                   weapon.UncagedSeekerBeforeLaunch,
			"max_lock_angle_before_launch":                   weapon.MaxLockAngleBeforeLaunch,
			"min_angle_of_incidence_to_sun":                  weapon.MinAngleOfIncidenceToSun,
			"baseline_lock_range_rear":                       weapon.BaselineLockRangeRear,
			"baseline_flare_and_ircm_detection_range":        weapon.BaselineFlareAndIRCMDetectionRange,
			"baseline_lock_range_all":                        weapon.BaselineLockRangeAll,
			"baseline_lock_range_ground":                     weapon.BaselineLockRangeGround,
			"baseline_lock_range_target":                     weapon.BaselineLockRangeTarget,
			"baseline_flare_detection":                       weapon.BaselineFlareDetection,
			"baseline_ircm_detection":                        weapon.BaselineIRCMDetection,
			"baseline_dircm_detection":                       weapon.BaselineDIRCMDetection,
			"baseline_ldircm_detection":                      weapon.BaselineLDIRCMDetection,
			"baseline_head_on_lock_range":                    weapon.BaselineHeadOnLockRange,
			"max_lock_range":                                 weapon.MaxLockRangeHardLimit,
			"irccm":                                          weapon.IRCCM,
			"irccm_type":                                     weapon.IRCCMType,
			"irccm_field_of_view":                            weapon.IRCCMFieldOfView,
			"irccm_rejection_threshold":                      weapon.IRCCMRejectionThreshold,
			"irccm_reaction_time":                            weapon.IRCCMReactionTime,
			"min_target_size":                                weapon.MinTargetSize,
			"max_break_lock_time":                            weapon.MaxBreakLockTime,
			"can_be_slaved_to_radar":                         weapon.CanBeSlavedToRadar,
			"can_lock_after_launch":                          weapon.CanLockAfterLaunch,
			"band":                                           weapon.Band,
			"angular_speed_rejection":                        weapon.AngularSpeedRejectionThresh,
			"accel_rejection":                                weapon.AccelRejectionThreshRange,
			"inertial_guidance_drift_ms":                     weapon.InertialGuidanceDriftSpeedMs,
			"inertial_guidance_drift":                        weapon.InertialGuidanceDriftSpeed,
			"datalink":                                       weapon.Datalink,
			"can_datalink_reconnect":                         weapon.CanDatalinkReconnect,
			"sidelobe_attenuation":                           weapon.SidelobeAttenuation,
			"transmitter_power":                              weapon.TransmitterPower,
			"transmitter_half_sensitivity":                   weapon.TransmitterHalfSensitivity,
			"transmitter_sidelobe_sensitivity":               weapon.TransmitterSidelobeSens,
			"receiver_half_sensitivity":                      weapon.ReceiverHalfSensitivity,
			"receiver_sidelobe_sensitivity":                  weapon.ReceiverSidelobeSens,
			"distance_min":                                   weapon.DistanceMinValue,
			"distance_max":                                   weapon.DistanceMaxValue,
			"distance_width":                                 weapon.DistanceWidth,
			"distance_ref_width":                             weapon.DistanceRefWidth,
			"distance_min_signal_gate":                       weapon.DistanceMinSignalGate,
			"distance_min_m":                                 weapon.DistanceMinValueM,
			"distance_max_km":                                weapon.DistanceMaxValueKm,
			"distance_width_m":                               weapon.DistanceWidthM,
			"distance_ref_width_m":                           weapon.DistanceRefWidthM,
			"distance_min_signal_gate_m":                     weapon.DistanceMinSignalGateM,
			"distance_gate_search":                           weapon.DistanceGateSearchRange,
			"distance_gate_alpha":                            weapon.DistanceGateAlphaFilter,
			"distance_gate_beta":                             weapon.DistanceGateBetaFilter,
			"doppler_speed_min":                              weapon.DopplerSpeedMinValue,
			"doppler_speed_max":                              weapon.DopplerSpeedMaxValue,
			"doppler_speed_width":                            weapon.DopplerSpeedWidth,
			"doppler_speed_ref_width":                        weapon.DopplerSpeedRefWidth,
			"doppler_speed_min_gate":                         weapon.DopplerSpeedMinSignalGate,
			"doppler_speed_gate_search":                      weapon.DopplerSpeedGateSearch,
			"doppler_speed_gate_alpha":                       weapon.DopplerSpeedGateAlpha,
			"doppler_speed_gate_beta":                        weapon.DopplerSpeedGateBeta,
			"proportional_nav_multiplier":                    weapon.ProportionalNavMultiplier,
			"base_air_speed":                                 weapon.BaseIndicatedAirSpeed,
			"pid_proportional":                               weapon.PIDProportionalTerm,
			"pid_integral":                                   weapon.PIDIntegralTerm,
			"pid_integral_limit":                             weapon.PIDIntegralTermLimit,
			"pid_derivative":                                 weapon.PIDDerivativeTerm,
			"orienting_phase":                                weapon.OrientingPhase,
			"orienting_start_delay":                          weapon.OrientingStartDelay,
			"orienting_control_time":                         weapon.OrientingControlTime,
			"orienting_elevation_addition":                   weapon.OrientingElevationAddition,
			"drag_coefficient_multiplier":                    weapon.DragCoefficientMultiplier,
			"drag_coefficient_multiplier_bomb":               weapon.DragCoefficientMultiplierBomb,
			"wing_area_multiplier":                           weapon.WingAreaMultiplier,
			"start_speed":                                    weapon.StartSpeed,
			"maximum_speed":                                  weapon.MaximumSpeed,
			"minimum_range":                                  weapon.MinimumRange,
			"minimum_range_km":                               weapon.MinimumRangeKm,
			"flight_range_limit":                             weapon.FlightRangeLimit,
			"maximum_g_load":                                 weapon.MaximumGLoad,
			"maximum_fin_angle_of_attack":                    weapon.MaximumFinAngleOfAttack,
			"maximum_fin_lateral_acceleration":               weapon.MaximumFinLateralAcceleration,
			"fins_lateral_acceleration":                      weapon.FinsLateralAcceleration,
			"maximum_lateral_acceleration":                   weapon.MaximumLateralAcceleration,
			"max_lateral_acceleration":                       weapon.MaxLateralAcceleration,
			"maximum_aoa":                                    weapon.MaximumAOA,
			"thrust_vectoring":                               weapon.ThrustVectoring,
			"thrust_vectoring_angle":                         weapon.ThrustVectoringAngle,
			"thrust_vectoring_angles":                        weapon.ThrustVectoringAngles,
			"maximum_launch_angle_horizontal_vertical":       weapon.MaximumLaunchAngleHorizontalVertical,
			"maximum_launch_angle":                           weapon.MaximumLaunchAngle,
			"maximum_axis_values":                            weapon.MaximumAxisValues,
			"statcard_speed_mach":                            weapon.StatcardSpeedMach,
			"statcard_speed_ms":                              weapon.StatcardSpeedMs,
			"statcard_speed_ms_or_mach":                      weapon.StatcardSpeedMsOrMach,
			"statcard_launch_range":                          weapon.StatcardLaunchRange,
			"statcard_guaranteed_range":                      weapon.StatcardGuaranteedRange,
			"maximum_statcard_g_load":                        weapon.MaximumStatcardGLoad,
			"statcard_max_g_load":                            weapon.StatcardMaxGLoad,
			"flight_time_until_guidance_starts":              weapon.FlightTimeUntilGuidanceStarts,
			"flight_time_when_pull_limit_x":                  weapon.FlightTimeWhenPullLimitX,
			"flight_time_when_pull_limit_100":                weapon.FlightTimeWhenPullLimit100,
			"eta_to_impact_when_prop_multiplier":             weapon.ETAtoImpactWhenPropMultiplier,
			"loft":                                           weapon.Loft,
			"loft_angle":                                     weapon.LoftAngle,
			"loft_a":                                         weapon.LoftA,
			"target_elevation":                               weapon.TargetElevation,
			"target_e":                                       weapon.TargetE,
			"maximum_target_angular_change":                  weapon.MaximumTargetAngularChange,
			"has_tracer_in_tail":                             weapon.HasTracerInTail,
			"sea_skimming":                                   weapon.SeaSkimming,
			"eta_to_impact_when_sea_altitude_reaches_metres": weapon.ETAtoImpactWhenSeaAltitudeReachesMetres,
			"skim_altitude":                                  weapon.SkimAltitude,
			"attack_altitude":                                weapon.AttackAltitude,
			"additional_notes":                               weapon.AdditionalNotes,
		},
	}
}
